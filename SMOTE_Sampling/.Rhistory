source('F:/Independent Projects/Blog-post-codes/SMOTE_Sampling/smote.R', echo=TRUE)
install.packages("caret")
library(caret)
data("iris")
head(iris)
table(iris$Species)
df <- read.table("Data/breast-cancer-wisconsin.txt", header = FALSE,  sep = ",")
rm(list = ls())
library(caret)
# read data
df <- read.table("Data/breast-cancer-wisconsin.txt", header = FALSE,  sep = ",")
# update column names
colnames(df) <- c("sample_code_number",
"clump_thickness",
"uniformity_of_cell_size",
"uniformity_of_cell_shape",
"marginal_adhesion",
"single_epithelial_cell_size",
"bare_nuclei",
"bland_chromatin",
"normal_nucleoli",
"mitosis",
"classes")
View(df)
head(df)
source('F:/Independent Projects/Blog-post-codes/SMOTE_Sampling/smote.R', echo=TRUE)
unique(df$classes)
table(df$classes)
df$bare_nuclei
df$single_epithelial_cell_size
dfindex <- createDataPartition(df$classes, p = 0.7, list = FALSE)
train_data <- df[index, ]
test_data  <- df[-index, ]
train_data <- df[dfindex, ]
test_data  <- df[-dfindex, ]
table(train_data$classes)
trnctrl <- trainControl(method = "repeatedcv", number = 10,
repeats = 10, verboseIter = FALSE,
sampling = "smote")
set.seed(42)
model.rf <- caret::train(classes ~ ., data = train_data, method = "rf", trControl = trnctrl)
install.packages("smotefamily")
dat_plot = SMOTE(df,  # feature values
as.numeric(df$classes),  # class labels
K = 3, dup_size = 0)# function parameters
library(smotefamily)
dat_plot = SMOTE(df,  # feature values
as.numeric(df$classes),  # class labels
K = 3, dup_size = 0)# function parameters
dat_plot = SMOTE(df[1:2],  # feature values
as.numeric(df$classes),  # class labels
K = 3, dup_size = 0)# function parameters
df$clump_thickness
df[2:3]
head(df[2:3])
dat_plot = SMOTE(df[2:3],  # feature values
as.numeric(df$classes),  # class labels
K = 3, dup_size = 0)   # function parameters
?SMOTE
dat_plot = SMOTE(df[2:3],  # feature values
as.numeric(df$classes),  # class labels
K = 5, dup_size = 0)   # function parameters
dat_plot = SMOTE(df[2:3],  # feature values
df$classes,  # class labels
K = 5, dup_size = 0)   # function parameters
dat_plot = SMOTE(df[2:3], df$classes,K = 5, dup_size = 0)
install.packages("FNN")
dat_plot = SMOTE(df[2:3], df$classes,K = 5, dup_size = 0)
warnings()
dat_plot = SMOTE(train_data[2:3], df$classes,K = 5, dup_size = 0)
which(is.na(train_data))
table(df$classes)
install.packages("FNN")
install.packages("FNN")
model.rf <- caret::train(classes ~ ., data = train_data, method = "rf", trControl = trnctrl)
dat_plot = SMOTE(train_data[2:3], as.factor(df$classes), K = 5, dup_size = 0)
as.factor(df$classes)
dat_plot = SMOTE(train_data[2:3], as.factor(train_data$classes), K = 5, dup_size = 0)
warnings()
dat_plot = SMOTE(train_data[,2:3], as.factor(train_data$classes), K = 5, dup_size = 0)
warnings()
dat = SMOTE(train_data[,2:3],factor(train_data$classes), K = 5, dup_size = 0)
dat = SMOTE(train_data[,2:3], train_data$classes, K = 5, dup_size = 0)
warnings()
install.packages(DMwR)
install.packages("DMwR")
library(DMwR)
dat = SMOTE(classes~., data = train_data, perc.over = 200, k = 5, perc.under = 100)
View(test_data)
dat = SMOTE(classes~., data = train_data[c(1:11)], perc.over = 200, k = 5, perc.under = 100)
dat = SMOTE(classes~., data = train_data[c(1:11)], perc.over = 200, perc.under = 100)
warnings()
head(train_data[c(1:11)])
dat = SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 100)
head(train_data[c(2:11)])
model.rf <- caret::train(classes ~ ., data = train_data, method = "rf", trControl = trnctrl)
View(dat)
data.frame(dat)
dat$data$class
table(dat$data$class)
table(train_data$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 100)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 100)
colnames(df)
colnames(train_data)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 100)
train_data$classes <- as.factor(train_data$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 100)
table(dat$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 100, perc.under = 100)
table(dat$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 100)
table(dat$classes)
table(train_data$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 100, perc.under = 100)
table(train_data$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 100, perc.under = 50)
table(train_data$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 50)
table(train_data$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 100)
table(train_data$classes)
table(train_data$classes)
table(dat$classes)
table(dat$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 50)
table(train_data$classes)
table(dat$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 100, perc.under = 100)
table(dat$classes)
table(train_data$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 200, perc.under = 100)
table(dat$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 100, perc.under = 100)
table(dat$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 100)
table(dat$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 50)
table(train_data$classes)
table(dat$classes)
table(dat$classes)
100
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 100)
table(dat$classes)
dat <-  SMOTE(classes~., data = train_data[c(2:11)], perc.over = 100, k = 3)
table(train_data$classes)
table(dat$classes)
plotdata <- data.frame(df$cell_size, df$cell_shape, df$classes)
View(plotdata)
library(reshape2)
plotdata <-  melt(plotdata, id.vars = c('classes'))
View(plotdata)
plotdata <-  melt(plotdata, id.vars = c('df.classes'))
View(plotdata)
ggplot(plotdata, aes(x=variable, y = value, color=df.classes)) + geom_point()
qplot(df$cell_size, df$cell_shape, geom = 'point')
qplot(df$cell_size, df$cell_shape, geom = 'point', color=df$classes)
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes)) + geom_point(size=3)
View(dat)
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes)) + geom_point(size=2)
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes)) + geom_point(size=2) +labs(x='Clump Thickness', y='Cell Shape')
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes)) + geom_jitter(size=2)
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes)) + geom_point(size=2) +labs(x='Clump Thickness', y='Cell Shape')
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape')+
theme(legend.text = 'Classes')
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape')+
guides(fill=guide_legend(title="Classes"))
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape')+
scale_fill_discrete(name = "New Legend Title")
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape')+
scale_fill_discrete(name = "Classes")
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape')+
scale_fill_discrete(name = "Classes")
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=df$classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape', fill='Classes')
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape', fill='Classes')+
scale_fill_discrete(name = "Classes")
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape')
ggplot(data = df, aes(x=df$clump_thickness, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
source('F:/Independent Projects/Blog-post-codes/SMOTE_Sampling/smote.R', echo=TRUE)
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_jitter(size=2)+
labs(x='Clump Thickness', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Clump Thickness', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
rm(list = ls())
library(caret)
# read data
df <- read.table("Data/breast-cancer-wisconsin.txt", header = FALSE,  sep = ",")
# update column names
colnames(df) <- c("sample_no", "clump_thickness", "cell_size", "cell_shape",
"marginal_adhesion","single_epithelial_cell_size",
"bare_nuclei", "bland_chromatin", "normal_nucleoli",
"mitosis", "classes")
# update the classes
df$classes <- ifelse(df$classes == "2", "benign", ifelse(df$classes == "4", "malignant", NA))
df$classes <- as.factor(df$classes)
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_fill_manual(values = c("treatment" = "#377EB8",
"control" = "#E41A1C"))
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_fill_manual(values = c("benign" = "#377EB8",
"malignant" = "#E41A1C"))
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_fill_manual(values = c("benign" = "#377EB8",
"malignant" = "#E41A1C"))+
theme_bw(base_family = "Canaro Medium")
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_fill_manual(values = c("benign" = "#377EB8",
"malignant" = "#E41A1C"))
warnings()
source('~/.active-rstudio-document', echo=TRUE)
theme_our <- function(base_size = 13) {
theme_bw(base_size, base_family = "Canaro Medium") +
theme(legend.position = "bottom")
}
update_font_defaults <- function() {
update_geom_defaults("text", list(family = "Canaro Medium"))
update_geom_defaults("label", list(family = "Canaro Medium"))
}
set_our_theme <- function(base_size = 13)  {
ggthemr::ggthemr(get_theme_palette())
theme_set(theme_our(base_size = base_size))
update_font_defaults()
}
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
set_our_theme()
devtools::install_github('cttobin/ggthemr')
install.packages("scales")
install.packages("scales")
devtools::install_github('cttobin/ggthemr')
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
set_our_theme()
library(ggplot2)
ggplot(data = df, aes(x=df$cell_size, y=df$cell_shape, color=classes))+
geom_point(size=2)+
labs(x='Cell Size', y='Cell Shape')+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
set_our_theme()
